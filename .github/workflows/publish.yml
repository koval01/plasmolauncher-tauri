name: 'Publish'

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - release

jobs:
  create-release:
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        env:
          REPO_OWNER: ${{ secrets.PUBLISH_REPO_OWNER }}
          REPO_NAME: ${{ secrets.PUBLISH_REPO_NAME }}
        with:
          github-token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: process.env.REPO_OWNER,
              repo: process.env.REPO_NAME,
              tag_name: `${process.env.PACKAGE_VERSION}`,
              name: `${process.env.PACKAGE_VERSION}`,
              body: 'Take a look at the assets to download and install this app.',
              draft: true,
              prerelease: false
            })
            return data.id
  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          
      - name: install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        
      - uses: Swatinem/rust-cache@v1
        
      - name: Give GitHub Actions access to common repo
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SECRET_LAUNCHER_COMMON_DEPLOY_KEY }}
          
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
          
      - name: install app dependencies and build it
        run: yarn && yarn build
        
      - uses: plasmoapp/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}
          releaseRepoOwner: ${{ secrets.PUBLISH_REPO_OWNER }}
          releaseRepoName: ${{ secrets.PUBLISH_REPO_NAME }}
          tagName: __VERSION__
          releaseName: __VERSION__
          releaseBody: ""

  publish-release:
    runs-on: ubuntu-20.04
    needs: [create-release, build-tauri]

    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          REPO_OWNER: ${{ secrets.PUBLISH_REPO_OWNER }}
          REPO_NAME: ${{ secrets.PUBLISH_REPO_NAME }}
          RELEASE_ID: ${{ needs.create-release.outputs.release_id }}
        with:
          github-token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          script: |
            github.rest.repos.updateRelease({
              owner: process.env.REPO_OWNER,
              repo: process.env.REPO_NAME,
              release_id: process.env.RELEASE_ID,
              draft: false,
              prerelease: false
            })
